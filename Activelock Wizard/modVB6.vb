Module modVB6
    Dim TheFileName As String = "modALVB6.bas"
    Dim FilePath As String = Nothing
    Public Sub CreateVB6Module()
        Dim MyDialogResult As DialogResult
        frmMain.FolderBrowserDialog.SelectedPath = Application.StartupPath
        frmMain.FolderBrowserDialog.Description = "Please Select a folder To Save The File To"
        MyDialogResult = frmMain.FolderBrowserDialog.ShowDialog
        If MyDialogResult = Windows.Forms.DialogResult.OK Then
            FilePath = frmMain.FolderBrowserDialog.SelectedPath
        Else
            MsgBox("You Have To Select A Folder To Save The File To First", MsgBoxStyle.Critical)
            Exit Sub
        End If
        CreateFile()
        WriteToFile(My.Resources.VB6FormHeader)
        WriteToFile(My.Resources.VB6FormTop)
        CreateRoutineInitActivelock()
        WriteToFile(My.Resources.VB6FormRoutines)
        MsgBox("File Created Successfully, The New FileName Is: " & TheFileName, MsgBoxStyle.Information)
    End Sub
    Private Sub CreateFile()
        My.Computer.FileSystem.WriteAllText(FilePath & "\" & TheFileName, String.Empty, False)
    End Sub
    Private Sub WriteToFile(ByVal Data As String)
        My.Computer.FileSystem.WriteAllText(FilePath & "\" & TheFileName, Data, True)
    End Sub
    Private Sub CreateRoutineInitActivelock()
        WriteToFile("Private Const CrcDataEnc As String = " & Chr(34) & CrcDataEnc & Chr(34) & vbCrLf) 'added
        WriteToFile("Private Const PUB_KEY as string = " & Chr(34) & Enc(SoftwareCode) & Chr(34) & vbCrLf)
        WriteToFile(vbCrLf)
        WriteToFile("Public Function InitActivelock() As Boolean" & vbCrLf)
        WriteToFile("   Dim autoRegisterKey As String" & vbCrLf)
        WriteToFile("   Dim boolAutoRegisterKeyPath As Boolean" & vbCrLf)
        WriteToFile("   Dim Msg As String" & vbCrLf)
        WriteToFile("   Dim A() As String" & vbCrLf)
        WriteToFile("   " & vbCrLf)
        WriteToFile("   On Error GoTo DLLnotRegistered" & vbCrLf)
        WriteToFile("   ' Check the existence of necessary files to run this application" & vbCrLf)
        WriteToFile("   Call CheckForResources(" & Chr(34) & "Alcrypto3.dll" & Chr(34) & ", " & Chr(34) & "comctl32.ocx" & Chr(34) & ", " & Chr(34) & "tabctl32.ocx" & Chr(34) & ")" & vbCrLf)
        WriteToFile("   ' Check if the Activelock3.dll is registered. If not no need to continue." & vbCrLf)
        WriteToFile("   If CheckIfDLLIsRegistered = False Then End" & vbCrLf)
        WriteToFile("   On Error GoTo NotRegistered" & vbCrLf)
        WriteToFile("   ' Obtain AL instance and initialize its properties" & vbCrLf)
        WriteToFile("   Set MyActiveLock = ActiveLock3.NewInstance()" & vbCrLf)
        WriteToFile("   With MyActiveLock" & vbCrLf)
        WriteToFile("       .SoftwareName = " & Chr(34) & SoftwareName & Chr(34) & vbCrLf)
        WriteToFile("       .SoftwareVersion = " & Chr(34) & SoftwareVersion & Chr(34) & vbCrLf)
        WriteToFile("       .SoftwarePassword = " & EncodedPassword(SoftwarePassword) & vbCrLf)
        WriteToFile("       .LicenseKeyType = " & LicenceKeyType.ToString & vbCrLf)
        WriteToFile("       .TrialType = " & TrialType.ToString & vbCrLf)
        If TrialType <> TrialType_t.trialNone Then
            WriteToFile("       .TrialLength = " & TrialLength.ToString & vbCrLf)
            WriteToFile("       .TrialHideType = " & GetHideTypeStringVB6(TrialHideType) & vbCrLf)
        End If
        WriteToFile("       .SoftwareCode = dec(PUB_KEY)" & vbCrLf)
        WriteToFile("       .LockType = " & GetLockTypesStringVB6(LockTypes) & vbCrLf)
        WriteToFile("       strAutoRegisterKeyPath = App.Path & " & Chr(34) & "\" & Chr(34) & " & .SoftwareName & " & Chr(34) & ".all" & Chr(34) & vbCrLf)
        WriteToFile("       .AutoRegister = " & AutoRegister.ToString & vbCrLf)
        WriteToFile("       .AutoRegisterKeyPath = strAutoRegisterKeyPath" & vbCrLf)
        WriteToFile("       If FileExist(strAutoRegisterKeyPath) Then boolAutoRegisterKeyPath = True" & vbCrLf)
        WriteToFile("       ' use alsCheckTimeServer to enforce time server check for clock tampering detection" & vbCrLf)
        WriteToFile("       .CheckTimeServerForClockTampering = " & TimeServerClockTampering.ToString & vbCrLf)
        WriteToFile("       ' use alsCheckSystemFiles to enforce system files scanning for clock tampering detection" & vbCrLf)
        WriteToFile("       .CheckTimeServerForClockTampering = " & SystemFilesClockTampering.ToString & vbCrLf)
        WriteToFile("       .LicenseFileType = " & LicenceFileType.ToString & vbCrLf)
        WriteToFile("   ' Verify AL's authenticity" & vbCrLf)
        WriteToFile("   VerifyActiveLockdll" & vbCrLf)
        WriteToFile("   ' Initialize the keystore. We use a File keystore in this case." & vbCrLf)
        WriteToFile("   MyActiveLock.KeyStoreType = " & KeyStoreType.ToString & vbCrLf)
        WriteToFile("   ' Path to the license file" & vbCrLf)
        WriteToFile("   strKeyStorePath = App.Path & " & Chr(34) & "\" & Chr(34) & " & .SoftwareName & " & Chr(34) & ".lic" & Chr(34) & vbCrLf)
        WriteToFile("   MyActiveLock.KeyStorePath = strKeyStorePath" & vbCrLf)
        WriteToFile("   End With" & vbCrLf)
        WriteToFile("   ' Obtain the EventNotifier so that we can receive notifications from AL." & vbCrLf)
        WriteToFile("   Set frmMain.ActiveLockEventSink = MyActiveLock.EventNotifier" & vbCrLf)
        WriteToFile("   ' Initialize AL" & vbCrLf)
        WriteToFile("   MyActiveLock.Init autoRegisterKey" & vbCrLf)
        WriteToFile("   If FileExist(strKeyStorePath) And boolAutoRegisterKeyPath = True And autoRegisterKey <> " & Chr(34) & Chr(34) & " Then" & vbCrLf)
        WriteToFile("       ' This means, an ALL file existed and was used to create a LIC file" & vbCrLf)
        WriteToFile("       ' Init() method successfully registered the ALL file" & vbCrLf)
        WriteToFile("       ' and returned the license key" & vbCrLf)
        WriteToFile("       ' You can process that key here to see if there is any abuse, etc." & vbCrLf)
        WriteToFile("       ' ie. whether the key was used before, etc." & vbCrLf)
        WriteToFile("   End If" & vbCrLf)
        WriteToFile("   ' Check registration status" & vbCrLf)
        WriteToFile("   Dim strMsg As String" & vbCrLf)
        WriteToFile("   MyActiveLock.Acquire strMsg" & vbCrLf)
        WriteToFile("   If strMsg <> " & Chr(34) & Chr(34) & " Then 'There's a trial" & vbCrLf)
        WriteToFile("       A = Split(strMsg, vbCrLf)" & vbCrLf)
        WriteToFile("       ActivelockValues.RegStatus = A(0)" & vbCrLf)
        WriteToFile("       ActivelockValues.UsedDaysOrRuns = A(1)" & vbCrLf)
        WriteToFile("       ' You can also get the RemainingTrialDays or RemainingTrialRuns directly by:" & vbCrLf)
        WriteToFile("       'txtUsedDays.Text = MyActiveLock.RemainingTrialDays Or MyActiveLock.RemainingTrialRuns" & vbCrLf)
        WriteToFile("       ActivelockValues.ExpirationDate = " & Chr(34) & "No Valid Licence" & Chr(34) & vbCrLf)
        WriteToFile("       ActivelockValues.RegisteredUser = " & Chr(34) & "No Valid Licence" & Chr(34) & vbCrLf)
        WriteToFile("       ActivelockValues.RegisteredLevel = " & Chr(34) & "No Valid Licence" & Chr(34) & vbCrLf)
        WriteToFile("       ActivelockValues.LicenseClass = " & Chr(34) & "No Valid Licence" & Chr(34) & vbCrLf)
        WriteToFile("       ActivelockValues.ValidTrial = True" & vbCrLf)
        WriteToFile("       ActivelockValues.LicenceType = " & Chr(34) & "Free Trial" & Chr(34) & vbCrLf)
        WriteToFile("       InitActivelock = True" & vbCrLf)
        WriteToFile("       ActivelockValues.LicenceType = " & Chr(34) & "Free Trial" & Chr(34) & vbCrLf)
        WriteToFile("       InitActivelock = True" & vbCrLf)
        WriteToFile("       Exit Function" & vbCrLf)
        WriteToFile("   Else" & vbCrLf)
        WriteToFile("       'This should never happen (it should be caught by ErrorTrap)" & vbCrLf)
        WriteToFile("   End If" & vbCrLf)
        WriteToFile("   ' Uncomment the following to retrieve the usedlocktypes" & vbCrLf)
        WriteToFile("   ' Dim aa() As ActiveLock3.ALLockTypes" & vbCrLf)
        WriteToFile("   ' ReDim aa(UBound(MyActiveLock.UsedLockType))" & vbCrLf)
        WriteToFile("   ' aa = MyActiveLock.UsedLockType" & vbCrLf)
        WriteToFile("   ' MsgBox aa(0) 'For example, if only lockHDfirmware was used, this will return 256" & vbCrLf)
        WriteToFile("   ActivelockValues.RegStatus = " & Chr(34) & "Registered" & Chr(34) & vbCrLf)
        WriteToFile("   ActivelockValues.UsedDaysOrRuns = MyActiveLock.UsedDays" & vbCrLf)
        WriteToFile("   ActivelockValues.ExpirationDate = MyActiveLock.ExpirationDate" & vbCrLf)
        WriteToFile("   If ActivelockValues.ExpirationDate = " & Chr(34) & Chr(34) & " Then ActivelockValues.ExpirationDate = " & Chr(34) & "Permanent" & Chr(34) & "  'App has a permanent license" & vbCrLf)
        WriteToFile("   ActivelockValues.RegisteredUser = MyActiveLock.RegisteredUser" & vbCrLf)
        WriteToFile("   ActivelockValues.RegisteredLevel = MyActiveLock.RegisteredLevel" & vbCrLf)
        WriteToFile("   ' Networked Licenses" & vbCrLf)
        WriteToFile("   If MyActiveLock.LicenseClass =  " & Chr(34) & "MultiUser" & Chr(34) & " Then" & vbCrLf)
        WriteToFile("       ActivelockValues.LicenseClass = " & Chr(34) & "Networked" & Chr(34) & vbCrLf)
        WriteToFile("   Else" & vbCrLf)
        WriteToFile("       ActivelockValues.LicenseClass =  " & Chr(34) & "Single User" & Chr(34) & vbCrLf)
        WriteToFile("   End If" & vbCrLf)
        WriteToFile("   ActivelockValues.MaxCount = MyActiveLock.MaxCount" & vbCrLf)
        WriteToFile("   'Read the license file into a string to determine the license type" & vbCrLf)
        WriteToFile("   Dim strBuff As String" & vbCrLf)
        WriteToFile("   Dim fNum As Integer" & vbCrLf)
        WriteToFile("   fNum = FreeFile" & vbCrLf)
        WriteToFile("   Open strKeyStorePath For Input As #fNum" & vbCrLf)
        WriteToFile("   strBuff = Input(LOF(1), 1)" & vbCrLf)
        WriteToFile("   Close #fNum" & vbCrLf)
        WriteToFile("   If Instring(strBuff, " & Chr(34) & "LicenseType=3" & Chr(34) & ") Then" & vbCrLf)
        WriteToFile("       ActivelockValues.LicenceType = " & Chr(34) & "Time Limited" & Chr(34) & vbCrLf)
        WriteToFile("   ElseIf Instring(strBuff, " & Chr(34) & "LicenseType=1" & Chr(34) & ") Then" & vbCrLf)
        WriteToFile("       ActivelockValues.LicenceType = " & Chr(34) & "Periodic" & Chr(34) & vbCrLf)
        WriteToFile("   ElseIf Instring(strBuff, " & Chr(34) & "LicenseType=2" & Chr(34) & ") Then" & vbCrLf)
        WriteToFile("       ActivelockValues.LicenceType = " & Chr(34) & "Permanent" & Chr(34) & vbCrLf)
        WriteToFile("   End If" & vbCrLf)
        WriteToFile("   InitActivelock = True" & vbCrLf)
        WriteToFile("   ActivelockValues.ValidTrial = True" & vbCrLf)
        WriteToFile("   Exit Function" & vbCrLf)
        WriteToFile("NotRegistered:" & vbCrLf)
        WriteToFile("   'FunctionalitiesEnabled = False" & vbCrLf)
        WriteToFile("   If Instring(Err.Description, " & Chr(34) & "no valid license" & Chr(34) & ") = False And noTrialThisTime = False Then" & vbCrLf)
        WriteToFile("       MsgBox Err.Number & " & Chr(34) & ": " & Chr(34) & " & Err.Description" & vbCrLf)
        WriteToFile("   End If" & vbCrLf)
        WriteToFile("   ActivelockValues.LicenceType = " & Chr(34) & "None" & Chr(34) & vbCrLf)
        WriteToFile("   If strMsg <> " & Chr(34) & Chr(34) & " Then" & vbCrLf)
        WriteToFile("       MsgBox strMsg, vbInformation" & vbCrLf)
        WriteToFile("   End If" & vbCrLf)
        WriteToFile("   Exit Function" & vbCrLf)
        WriteToFile("DLLnotRegistered:" & vbCrLf)
        WriteToFile("   End" & vbCrLf)
        WriteToFile("End Function" & vbCrLf)
        WriteToFile("" & vbCrLf)
    End Sub
End Module
' & Chr(34) & "